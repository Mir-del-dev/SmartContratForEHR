(()=>{let t,e,o;async function c(){try{const t=await o.methods.getDoctorsWithAccess().call(),n=t[0],r=t[1],a=document.getElementById("doctor-list");a.innerHTML="",n.forEach(((t,n)=>{const s=a.insertRow();s.insertCell(0).textContent=n+1,s.insertCell(1).textContent=t,s.insertCell(2).textContent=r[n];const l=s.insertCell(3),i=document.createElement("button");i.type="button",i.className="btn btn-light",i.textContent="❌",i.setAttribute("data-id",t),i.setAttribute("data-bs-toggle","tooltip"),i.setAttribute("data-bs-placement","top"),i.setAttribute("data-bs-custom-class","custom-tooltip"),i.setAttribute("title","Révoquer l'accès du médecin"),i.addEventListener("click",(async()=>{await async function(t){try{const c=await e.eth.getAccounts();await o.methods.revokeAccess(t).send({from:c[0]}),alert(`Accès révoqué pour ${t}`)}catch(t){console.error("Erreur lors de la révocation de l'accès :",t),alert("Erreur lors de la révocation de l'accès.")}await c()}(t)})),l.appendChild(i)}))}catch(t){console.error("Erreur lors du chargement des médecins :",t)}}void 0!==window.ethereum?console.log("MetaMask trouvé !"):alert("Veuillez installer MetaMask !"),document.getElementById("grant-access").addEventListener("click",(async function(){const t=document.getElementById("doctorAddress").value,n=document.getElementById("doctorName").value;try{const c=await e.eth.getAccounts();await o.methods.grantAccess(t,86400,n,[]).send({from:c[0]}),alert(`Accès accordé au médecin ${t} pour 24 heures`)}catch(t){console.error("Erreur lors de l'attribution de l'accès :",t),alert("Erreur lors de l'attribution de l'accès.")}await c()})),document.getElementById("loadDoctors").addEventListener("click",c),document.getElementById("check-access").addEventListener("click",(async function(){try{const t=await e.eth.getAccounts();console.log("Compte déployeur :",t[0]);const c="0x71bE63f3384f5fb98995898A86B02Fb2426c5788",n=await o.methods.canAccess(c).call();console.log(`Le médecin ${c} a accès ?`,n)}catch(t){console.error("Erreur lors de la vérification de l'état du contrat :",t)}})),window.onload=async function(){const n=document.getElementById("ifNotLogging"),r=document.getElementById("ifLogging");try{await async function(){try{const e=await fetch("/contract.json"),o=await e.json();t=o.abi,console.log("ABI chargé :",t)}catch(t){console.error("Erreur lors du chargement de l'ABI :",t),alert("Erreur lors du chargement de l'ABI. Vérifiez votre configuration.")}}(),e=new Web3(window.ethereum),await ethereum.request({method:"eth_requestAccounts"}),o=new e.eth.Contract(t,"0x5FbDB2315678afecb367f032d93F642f64180aa3"),console.log("Contrat initialisé !"),n.style.display="none",r.style.display="block"}catch(t){console.error("Erreur d'initialisation",t)}await c()}})();